
db.createCollection( 'Costumer', {validator: {$jsonSchema: {bsonType: 'object',title:'Costumer',required: [         'name',          'surname',          'address',          'phone',          'City'],properties: {name: {bsonType: 'string'},surname: {bsonType: 'string'},address: {bsonType: 'object',
title:'object',required: [         'streer',          'number'],properties: {streer: {bsonType: 'string'},number: {bsonType: 'string'}}},phone: {bsonType: 'string'},City: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'Province', {validator: {$jsonSchema: {bsonType: 'object',title:'Province',properties: {name: {bsonType: 'string'}}         }      }});  
db.createCollection( 'City', {validator: {$jsonSchema: {bsonType: 'object',title:'City',required: [         'Province'],properties: {Province: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'Order', {validator: {$jsonSchema: {bsonType: 'object',title:'Order',required: [         'Date_hour_order',          'delivery',          'amount_products',          'price',          'shop_id',          'employee_id',          'costumer_id'],properties: {Date_hour_order: {bsonType: 'timestamp'},delivery: {enum: ["local","home_delivery"]},amount_products: {bsonType: 'array',items: {
title:'object',required: [         'product_id'],properties: {product_id: {bsonType: 'objectId'}}}},price: {bsonType: 'int'},shop_id: {bsonType: 'objectId'},employee_id: {bsonType: 'objectId'},costumer_id: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'Products', {validator: {$jsonSchema: {bsonType: 'object',title:'Products',required: [         'pizza',          'hamburguer',          'beverage',          'Order',          'amount_products'],properties: {pizza: {bsonType: 'object',
title:'object',required: [         'name',          'description',          'photo',          'price',          'category_id'],properties: {name: {bsonType: 'string'},description: {bsonType: 'string'},photo: {bsonType: 'undefined'},price: {bsonType: 'int'},category_id: {bsonType: 'objectId'}}},hamburguer: {bsonType: 'object',
title:'object',required: [         'name',          'description',          'photo',          'price'],properties: {name: {bsonType: 'string'},description: {bsonType: 'string'},photo: {bsonType: 'undefined'},price: {bsonType: 'int'},category_id: {bsonType: 'objectId'}}},beverage: {bsonType: 'object',
title:'object',required: [         'name',          'description',          'photo',          'price'],properties: {name: {bsonType: 'string'},description: {bsonType: 'string'},photo: {bsonType: 'undefined'},price: {bsonType: 'int'}}},Order: {bsonType: 'objectId'},amount_products: {bsonType: 'array',items: {bsonType: 'objectId'}}}         }      }});  
db.createCollection( 'Category_pizza', {validator: {$jsonSchema: {bsonType: 'object',title:'Category_pizza',         }      }});  
db.createCollection( 'Shop', {validator: {$jsonSchema: {bsonType: 'object',title:'Shop',required: [         'name',          'address'],properties: {name: {bsonType: 'string'},address: {bsonType: 'object',
title:'object',required: [         'street',          'number',          'zip',          'city',          'province'],properties: {street: {bsonType: 'string'},number: {bsonType: 'string'},zip: {bsonType: 'string'},city: {bsonType: 'string'},province: {bsonType: 'string'}}}}         }      }});  
db.createCollection( 'Employee', {validator: {$jsonSchema: {bsonType: 'object',title:'Employee',required: [         'name',          'surname',          'nif',          'phone',          'work_type',          'shop_id'],properties: {name: {bsonType: 'string'},surname: {bsonType: 'string'},nif: {bsonType: 'string'},phone: {bsonType: 'string'},work_type: {enum: ["cookeer","delivery"]},shop_id: {bsonType: 'objectId'}}         }      }});  